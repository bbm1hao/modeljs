{"name":"Modeljs","tagline":"A simple javascript library for creating a Model part of a MVC application from JSON.","body":"modeljs\r\n=======\r\n\r\nA simple javaScript library for creating a Model part of a MVC application from JSON.\r\n\r\nFeatures\r\n--------------------\r\n  - Simple easy to use and intuitive library.\r\n  - No dependencies.\r\n  - Can save/load Model to/from JSON with/without model meta data.\r\n  - Can attach custom meta-data to properties that can be persisted with model.\r\n  - Supports models defined by a remote resource with the ability to periodically refresh.\r\n  - remote model has option to use JSONP in the event of CORS issues.\r\n  - Can register on change events with any single property or group of properties.\r\n  - Model change events bubble up.\r\n  - Can define and trigger custom events.\r\n  - Can suppress change event notification.\r\n  - Can batch actions into a transaction.\r\n  - Transaction callbacks can be easily optimized.\r\n  - Can tie validation methods to models and properties.\r\n  - Can flag any property value to not be persisted to JSON.\r\n  - Can retrieve FormattedValues using a custom defined Formatter.\r\n  - Can enable logging to flag incorrect uses of api to the console.\r\n  - Native browser Support for all browsers that support ECMA5 including and tested on IE9, Firefox 4+, Safari 5.1.4+, Chrome 7+, Opera 12+ without a shim library.\r\n  - Works on non-ECMA5 browser with use of a shim library. Specifically tested on IE8 with es5-shim.\r\n  - Compatible with the CommonJS module format and is usable as a Node module.\r\n  - Compatible with AMD module loaders like requirejs.\r\n\r\n\r\nBrowser Support\r\n---------------\r\nmodeljs works on all browsers that support ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf).  It has been manually tested on IE9, Firefox 14+, Safari 5.1.4 and Chrome 21+. To see if it work on a specify browser version of your choice, run the unit tests(test/ModelTest.html). To support older non ECMA5 browsers using a shim library like [es5-shim](https://github.com/kriskowal/es5-shim). Modeljs has been successfully tested on IE8 with the es5-shim library.\r\n\r\nGetting Started\r\n------------------\r\nClone the repo, `git clone git://github.com/dgeorges/modeljs.git`, or [download the latest release](https://github.com/dgeorges/modeljs/zipball/master)\r\n\r\nTo use modeljs in your application copy src/model.js to an appropriate location and include it in your HTML like so:\r\n\r\n    <script type=\"text/javascript\" src=\"/path/to/model.js\"></script>\r\n\r\nIf your doing server side development in Node, you can import it like so:\r\n\r\n    var Model = require(\"/path/to/model.js\");\r\nOr using npm install\r\n\r\n    npm install modeljs\r\n    var Model = require(\"modeljs\");\r\n\r\n\r\nExamples\r\n------------------\r\nA couple of example pages have been created to show how to use modeljs. They can be found in the /test/example folder\r\n - **New** sandbox enviornment on jsFiddle [here](http://jsfiddle.net/gh/get/jQuery/1.8.2/dgeorges/modeljs/tree/master/test/example/jsFiddleDemo/).\r\n - tableWidget.js Shows how a table widget can be created with model js.\r\n - example.html Shows how to integrate the table widget on your page and is followed by a tutorial of the modeljs api.\r\n - knockoutExample.html Shows how easy it is to build a binding library on top of modeljs that behaves like the popular knockoutjs library. The example is almost identical to the knockoutjs introduction example.\r\n\r\nDocumentation\r\n------------------\r\nDocumentation is generated by YUIdoc and can be viewed by cloning the repo or downloading the source and viewing **doc/index.html**.\r\nFor more information visit modeljs's [wiki](https://github.com/dgeorges/modeljs/wiki)\r\n\r\n\r\n###Project Status: Stable - v2.1.1 Released (Dec 1st 2012).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}